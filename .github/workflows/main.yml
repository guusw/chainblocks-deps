name: Automated Build

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  # emscripten:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       include:
  #         - script: emscripten
  #           thread-suffix: st
  #           os: ubuntu-latest
  #           threads-enabled: OFF
  #         - script: emscripten
  #           thread-suffix: mt
  #           os: ubuntu-latest
  #           threads-enabled: ON
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 1
  #         submodules: recursive
  #     - name: Checkout emsdk
  #       uses: actions/checkout@v2
  #       with:
  #         repository: emscripten-core/emsdk
  #         path: emsdk
  #         fetch-depth: 1
  #     - name: Build
  #       run: bash scripts/${{matrix.script}}/build ${{matrix.threads-enabled}}
  #     - name: Make Release
  #       uses: ./.github/actions/create-deps-release
  #       with:
  #         path: build/install
  #         name: deps-${{env.ARTIFACT_NAME}}
  #         token: ${{secrets.GITHUB_TOKEN}}
  # linux:
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       include:
  #         - script: ubuntu
  #           os: ubuntu-latest
  #         - script: ubuntu-valgrind
  #           os: ubuntu-latest
  #   runs-on: ${{matrix.os}}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 1
  #         submodules: recursive
  #     - name: Build
  #       run: bash scripts/${{matrix.script}}/build
  #     - name: Make Release
  #       uses: ./.github/actions/create-deps-release
  #       with:
  #         path: build/install
  #         name: deps-${{env.ARTIFACT_NAME}}
  #         token: ${{secrets.GITHUB_TOKEN}}
  windows:
    strategy:
      fail-fast: false
      matrix:
        include:
          - script: windows
            os: windows-latest
            msystem: MINGW64
            arch: x86_64
    runs-on: ${{matrix.os}}
    steps:
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          submodules: recursive
      - name: Set up MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.msystem }}
          release: false
          path-type: inherit
          install: >-
            base-devel
            mingw-w64-${{ matrix.arch }}-toolchain
            mingw-w64-${{ matrix.arch }}-cmake
            mingw-w64-${{ matrix.arch }}-ninja
            mingw-w64-${{ matrix.arch }}-clang
            mingw-w64-${{ matrix.arch }}-lld
            git
            wget
      - name: Build
        shell: msys2 {0}
        run: |
          mkdir build
          cd build
          cmake -G Ninja ..
          ninja install
      - name: Make Release
        uses: ./.github/actions/create-deps-release
        with:
          path: build/install
          name: deps-${{env.ARTIFACT_NAME}}
          token: ${{secrets.GITHUB_TOKEN}}
  # macos:
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       include:
  #         - script: macos
  #           os: macos-latest
  #         - script: ios
  #           os: macos-latest
  #         - script: ios-simulator
  #           os: macos-latest
  #   runs-on: ${{matrix.os}}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 1
  #         submodules: recursive
  #     - name: Checkout ios-cmake
  #       uses: actions/checkout@v2
  #       with:
  #         repository: leetal/ios-cmake
  #         path: cmake/ios-cmake
  #         fetch-depth: 1
  #     - name: Build
  #       run: bash scripts/${{matrix.script}}/build
  #     - name: Make Release
  #       uses: ./.github/actions/create-deps-release
  #       with:
  #         path: build/install
  #         name: deps-${{env.ARTIFACT_NAME}}
  #         token: ${{secrets.GITHUB_TOKEN}}
