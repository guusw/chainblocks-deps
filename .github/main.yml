name: Automated Build

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  linux:
    strategy:
      fail-fast: false
      matrix:
        include:
          - script: ubuntu
            os: ubuntu-latest
          - script: ubuntu-valgrind
            os: ubuntu-latest
    runs-on: $${{matrix.os}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          submodules: recursive
      - name: Build
        run: bash scripts/${{matrix.script}}
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: deps
          path: install
          if-no-files-found: error
  windows:
    strategy:
      fail-fast: false
      matrix:
        include:
          - script: windows
            os: windows-latest
            msystem: MINGW64
            arch: x86_64
    runs-on: $${{matrix.os}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          submodules: recursive
      - name: Set up MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.msystem }}
          release: false
          path-type: inherit
          install: >-
            base-devel
            mingw-w64-${{ matrix.arch }}-toolchain
            mingw-w64-${{ matrix.arch }}-cmake
            mingw-w64-${{ matrix.arch }}-ninja
            git
            wget
      - name: Build
        run: bash scripts/${{matrix.script}}
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: deps
          path: install
          if-no-files-found: error
  macos:
    strategy:
      fail-fast: false
      matrix:
        include:
          - script: macos
            os: macos-latest
          - script: ios
            os: macos-latest
          - script: ios-simulator
            os: macos-latest
    runs-on: $${{matrix.os}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          submodules: recursive
      - name: Build
        run: bash scripts/${{matrix.script}}
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: deps
          path: install
          if-no-files-found: error
  iOS:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          submodules: recursive
      - name: Set up dependencies
        run: |
          sudo xcode-select --switch /Applications/Xcode.app
          brew install boost cmake clang-format
          brew install openssl@1.1
          rustup update
          rustup target add x86_64-apple-ios
          rustup target add aarch64-apple-ios
      - name: Build device
        run: |
          mkdir build
          cd build
          cmake -G Xcode -DCMAKE_BUILD_TYPE=Debug -DCMAKE_SYSTEM_NAME=iOS ..
          xcodebuild -target cb_static -sdk iphoneos -arch arm64
      - name: Build simulator x86
        run: |
          cd build
          cmake -G Xcode -DCMAKE_BUILD_TYPE=Debug -DCMAKE_SYSTEM_NAME=iOS -DX86_IOS_SIMULATOR=1 ..
          xcodebuild -target cb_static -sdk iphonesimulator -arch x86_64
