diff --git a/CMakeLists.txt b/CMakeLists.txt
index 4ff3401..270e6de 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,8 +1,4 @@
-# Ubuntu 12.04 LTS has CMake 2.8.7, and is an important target since
-# several CI services, such as Travis and Drone, use it.  Solaris 11
-# has 2.8.6, and it's not difficult to support if you already have to
-# support 2.8.7.
-cmake_minimum_required(VERSION 2.8.6)
+cmake_minimum_required(VERSION 3.9.6)
 
 project(brotli C)
 
@@ -130,7 +126,11 @@ else()
 endif()
 unset(LOG2_RES)
 
-set(BROTLI_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/c/include")
+set(BROTLI_INCLUDE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/c/include")
+set(BROTLI_INCLUDE_DIRS
+  "$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/c/include>"
+  "$<INSTALL_INTERFACE:include>"
+)
 mark_as_advanced(BROTLI_INCLUDE_DIRS)
 
 set(BROTLI_LIBRARIES_CORE brotlienc brotlidec brotlicommon)
@@ -160,7 +160,8 @@ endfunction()
 transform_sources_list("scripts/sources.lst" "${CMAKE_CURRENT_BINARY_DIR}/sources.lst.cmake")
 include("${CMAKE_CURRENT_BINARY_DIR}/sources.lst.cmake")
 
-if(BROTLI_EMSCRIPTEN)
+option(BROTLI_BUILD_SHARED_LIBS "" OFF)
+if(NOT BROTLI_BUILD_SHARED_LIBS)
   set(BROTLI_SHARED_LIBS "")
 else()
   set(BROTLI_SHARED_LIBS brotlicommon brotlidec brotlienc)
@@ -195,7 +196,7 @@ foreach(lib IN LISTS BROTLI_SHARED_LIBS BROTLI_STATIC_LIBS)
   set_property(TARGET ${lib} APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES "${BROTLI_INCLUDE_DIRS}")
 endforeach()
 
-if(NOT BROTLI_EMSCRIPTEN)
+if(BROTLI_BUILD_SHARED_LIBS)
 target_link_libraries(brotlidec brotlicommon)
 target_link_libraries(brotlienc brotlicommon)
 endif()
@@ -215,37 +216,47 @@ if(BROTLI_PARENT_DIRECTORY)
 endif()
 
 # Build the brotli executable
-add_executable(brotli ${BROTLI_CLI_C})
-target_link_libraries(brotli ${BROTLI_LIBRARIES_STATIC})
+option(BROTLI_BUILD_TOOLS "Build executable brotli tool" ON)
+if(BROTLI_BUILD_TOOLS)
+  add_executable(brotli ${BROTLI_CLI_C})
+  target_link_libraries(brotli ${BROTLI_LIBRARIES_STATIC})
+endif()
 
 # Installation
-if(NOT BROTLI_EMSCRIPTEN)
 if(NOT BROTLI_BUNDLED_MODE)
+  if(BROTLI_BUILD_TOOLS)
   install(
-    TARGETS brotli
+    TARGETS brotli EXPORT brotliTargets
     RUNTIME DESTINATION "${CMAKE_INSTALL_BINDIR}"
   )
+  endif()
 
+  if(BROTLI_BUILD_SHARED_LIBS)
   install(
-    TARGETS ${BROTLI_LIBRARIES_CORE}
+    TARGETS ${BROTLI_LIBRARIES_CORE} EXPORT brotliTargets
     ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}"
     LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}"
     RUNTIME DESTINATION "${CMAKE_INSTALL_BINDIR}"
   )
+  endif()
 
   install(
-    TARGETS ${BROTLI_LIBRARIES_CORE_STATIC}
+    TARGETS ${BROTLI_LIBRARIES_CORE_STATIC} EXPORT brotliTargets
     ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}"
     LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}"
     RUNTIME DESTINATION "${CMAKE_INSTALL_BINDIR}"
   )
 
   install(
-    DIRECTORY ${BROTLI_INCLUDE_DIRS}/brotli
+    DIRECTORY ${BROTLI_INCLUDE_DIR}/brotli
     DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}"
   )
+
+  install(EXPORT brotliTargets
+    FILE brotliConfig.cmake
+    DESTINATION "${CMAKE_INSTALL_LIBDIR}/cmake/brotli"
+  )
 endif()  # BROTLI_BUNDLED_MODE
-endif()  # BROTLI_EMSCRIPTEN
 
 # Tests
 
